{
  "contractName": "Registrar",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_domain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_registryType",
          "type": "string"
        }
      ],
      "name": "registryAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ref",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_registryType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_stakePrice",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_registryToken",
          "type": "address"
        }
      ],
      "name": "createRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistrarLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_domain",
          "type": "string"
        }
      ],
      "name": "getRegistryController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_domain",
          "type": "string"
        }
      ],
      "name": "getRegistryType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_domain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_registryType\",\"type\":\"string\"}],\"name\":\"registryAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ref\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_registryType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_stakePrice\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_registryToken\",\"type\":\"address\"}],\"name\":\"createRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrarLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_domain\",\"type\":\"string\"}],\"name\":\"getRegistryController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_domain\",\"type\":\"string\"}],\"name\":\"getRegistryType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createRegistry(string,string,string,uint256,address)\":{\"params\":{\"_domain\":\"The primary name used to represent a particular Registry. \",\"_ref\":\"The primary reference that a Registry links to. This can be any type of content and is typically used to reference an index or url.\",\"_registryToken\":\"The address of the Registry's Token. Registry Tokens are issued upon staking Infinity Token to transfer the ownership of a Registry Entry.\",\"_registryType\":\"The Registry's Type. Registry Types are defined globally at the Registrar and used to categorize Registries.\",\"_stakePrice\":\"The amount of Infinity Token required to register a new Entry in the Registry. \"}},\"getRegistryController(string)\":{\"params\":{\"_domain\":\"The primary name used to represent a particular Registry. \"}},\"getRegistryType(string)\":{\"params\":{\"_domain\":\"The primary name used to represent a particular Registry. \"}}}},\"userdoc\":{\"methods\":{\"createRegistry(string,string,string,uint256,address)\":{\"notice\":\"Creates a new Registry and associated Entry in the Registrar.\"},\"getRegistrarLength()\":{\"notice\":\"Returns the the number of Registries in the Registrar as an interger. \"},\"getRegistryController(string)\":{\"notice\":\"Returns the address of a Registry Controller by providing its domain as a string.\"},\"getRegistryType(string)\":{\"notice\":\"Returns the Type of a Registry by providing its domain as a string.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/neo/Code/ZNS/contracts/Registrar/Registrar.sol\":\"Registrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/neo/Code/ZNS/contracts/Registrar/Registrar.sol\":{\"keccak256\":\"0x8d4ebc58e36468cb6c54688d18abd5edc49f7022dbc40b5e09c563916dfd3d83\",\"urls\":[\"bzz-raw://593566f78d30e5a6a4ba9817bcd6253d2bdcf89b1e41935302f934be73260b05\",\"dweb:/ipfs/QmTeMRsTrH8KS89hk1jcYvdhzEgvNJn8WJ9dzcvHRzmzXF\"]},\"/Users/neo/Code/ZNS/contracts/Registry/Registry.sol\":{\"keccak256\":\"0x30047ff12314ba772dd94c440d5a10c6a75034ab0081eba3e6af1c727107b2a9\",\"urls\":[\"bzz-raw://de4b248e73d91416c9e7698ed32c79a819451c8dcf7b0bbb9180ea700b0f41e2\",\"dweb:/ipfs/QmavU9PvdzPn2NDUzjmDAqgBT1K3TQ4uvuG6Lt264rYpRB\"]},\"/Users/neo/Code/ZNS/contracts/RegistryController/RegistryController.sol\":{\"keccak256\":\"0x9906ce7eb865e17c86803d3ce7429da9b052d923794f115514f0b5faedfd06c2\",\"urls\":[\"bzz-raw://c6ac08a0630433e1f3e402ca4788c1cad41408769ea62d47befda6b18b0c1d36\",\"dweb:/ipfs/QmPvjCurn9DW1m6EpE7xnn1npubwrH1duE7JuQn2qM8uA1\"]},\"/Users/neo/Code/ZNS/contracts/RegistryController/RegistryControllerI.sol\":{\"keccak256\":\"0x837bc8808799380810e39900531fbb5cf79a393275810bebe9f5eed0d7278086\",\"urls\":[\"bzz-raw://f8ca2450a6d452c4f0123bcfd15953b10d0b296ad6ed1b0e066849a4ddb01d22\",\"dweb:/ipfs/QmbiHYroowBbm7hRdyBFPe9nrv7Rbc5JxYDZkK7tcHBjvR\"]},\"/Users/neo/Code/ZNS/contracts/RegistryToken/RegistryToken.sol\":{\"keccak256\":\"0x603643c2ec1d3cb5b42f9b02b325988966dfaeaeb4b2d787ab05c25460f6a77b\",\"urls\":[\"bzz-raw://b1a28ba72bd0aee4f069cebc892cc05c3216316a8852617d7737a5aab8c46aee\",\"dweb:/ipfs/QmXojmKmXq62HtxHKXwATR2FDzHxfBEgQsnrT2diMhAc2C\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506144ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063132a77ee1461005c57806337c3a7da146101575780639433fcbc14610175578063d31097da146101e3578063ef08989d146103f6575b600080fd5b6101156004803603602081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061052a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015f6105c0565b6040518082815260200191505060405180910390f35b6101a16004803603602081101561018b57600080fd5b81019080803590602001909291905050506105cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f4600480360360a08110156101f957600080fd5b810190808035906020019064010000000081111561021657600080fd5b82018360208201111561022857600080fd5b8035906020019184600183028401116401000000008311171561024a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ad57600080fd5b8201836020820111156102bf57600080fd5b803590602001918460018302840111640100000000831117156102e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034457600080fd5b82018360208201111561035657600080fd5b8035906020019184600183028401116401000000008311171561037857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610609565b005b6104af6004803603602081101561040c57600080fd5b810190808035906020019064010000000081111561042957600080fd5b82018360208201111561043b57600080fd5b8035906020019184600183028401116401000000008311171561045d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ef5780820151818401526020810190506104d4565b50505050905090810190601f16801561051c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60006002826040518082805190602001908083835b60208310610562578051825260208201915060208101905060208303925061053f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600380549050905090565b600381815481106105da57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051610615906111b1565b604051809103906000f080158015610631573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662b5ec6b868686856040518563ffffffff1660e01b8152600401808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b8381101561073c578082015181840152602081019050610721565b50505050905090810190601f1680156107695780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156107a2578082015181840152602081019050610787565b50505050905090810190601f1680156107cf5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156108085780820151818401526020810190506107ed565b50505050905090810190601f1680156108355780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250604081101561089757600080fd5b81019080805160405193929190846401000000008211156108b757600080fd5b838201915060208201858111156108cd57600080fd5b82518660018202830111640100000000821117156108ea57600080fd5b8083526020830192505050908051906020019080838360005b8381101561091e578082015181840152602081019050610903565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561096e57600080fd5b8382019150602082018581111561098457600080fd5b82518660018202830111640100000000821117156109a157600080fd5b8083526020830192505050908051906020019080838360005b838110156109d55780820151818401526020810190506109ba565b50505050905090810190601f168015610a025780820380516001836020036101000a031916815260200191505b506040525050505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663209df0fa836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610abf57600080fd5b505af1158015610ad3573d6000803e3d6000fd5b505050506040513d6020811015610ae957600080fd5b8101908080519060200190929190505050506000604051610b09906111be565b604051809103906000f080158015610b25573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663f09a4016600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050806002876040518082805190602001908083835b60208310610c6d5780518252602082019150602081019050602083039250610c4a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856002876040518082805190602001908083835b60208310610d185780518252602082019150602081019050602083039250610cf5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190610d619291906111cb565b50836002876040518082805190602001908083835b60208310610d995780518252602082019150602081019050602083039250610d76565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002019080519060200190610de29291906111cb565b5060036002876040518082805190602001908083835b60208310610e1b5780518252602082019150602081019050602083039250610df8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1db9576dbbdd63cc0e73a6a1055164d40d9ffcec8ec56a8c352e94fb5a66e10c6002876040518082805190602001908083835b60208310610f295780518252602082019150602081019050602083039250610f06565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168786604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ff8578082015181840152602081019050610fdd565b50505050905090810190601f1680156110255780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561105e578082015181840152602081019050611043565b50505050905090810190601f16801561108b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050505050565b60606002826040518082805190602001908083835b602083106110db57805182526020820191506020810190506020830392506110b8565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a55780601f1061117a576101008083540402835291602001916111a5565b820191906000526020600020905b81548152906001019060200180831161118857829003601f168201915b50505050509050919050565b6116718061127183390190565b611bd8806128e283390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061120c57805160ff191683800117855561123a565b8280016001018555821561123a579182015b8281111561123957825182559160200191906001019061121e565b5b509050611247919061124b565b5090565b61126d91905b80821115611269576000816000905550600101611251565b5090565b9056fe608060405234801561001057600080fd5b50611651806100206000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80631d6d32ba116100665780631d6d32ba1461075d5780631d8e2f58146107e05780635ab1bd531461082a578063c822d7f0146109b8578063fb3e644414610a9257610092565b8062b5ec6b14610097578063149adf5814610385578063164f25bf146104b95780631692f21f1461060b575b600080fd5b61029e600480360360808110156100ad57600080fd5b81019080803590602001906401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460018302840111640100000000831117156100fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184600183028401116401000000008311171561019557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f857600080fd5b82018360208201111561020a57600080fd5b8035906020019184600183028401116401000000008311171561022c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b4d565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61043e6004803603602081101561039b57600080fd5b81019080803590602001906401000000008111156103b857600080fd5b8201836020820111156103ca57600080fd5b803590602001918460018302840111640100000000831117156103ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047e578082015181840152602081019050610463565b50505050905090810190601f1680156104ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610609600480360360408110156104cf57600080fd5b81019080803590602001906401000000008111156104ec57600080fd5b8201836020820111156104fe57600080fd5b8035906020019184600183028401116401000000008311171561052057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460018302840111640100000000831117156105b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ced565b005b61075b6004803603604081101561062157600080fd5b810190808035906020019064010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106d557600080fd5b8201836020820111156106e757600080fd5b8035906020019184600183028401116401000000008311171561070957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f51565b005b6107656110fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107a557808201518184015260208101905061078a565b50505050905090810190601f1680156107d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e861119c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108326111c2565b604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b838110156108ac578082015181840152602081019050610891565b50505050905090810190601f1680156108d95780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156109125780820151818401526020810190506108f7565b50505050905090810190601f16801561093f5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561097857808201518184015260208101905061095d565b50505050905090810190601f1680156109a55780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610a71600480360360208110156109ce57600080fd5b81019080803590602001906401000000008111156109eb57600080fd5b8201836020820111156109fd57600080fd5b80359060200191846001830284011164010000000083111715610a1f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113d6565b60405180831515151581526020018281526020019250505060405180910390f35b610b4b60048036036020811015610aa857600080fd5b8101908080359060200190640100000000811115610ac557600080fd5b820183602082011115610ad757600080fd5b80359060200191846001830284011164010000000083111715610af957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114a2565b005b6060808560009080519060200190610b66929190611576565b508460019080519060200190610b7d929190611576565b508360029080519060200190610b94929190611576565b5082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555094509492505050565b60606004826040518082805190602001908083835b60208310610c175780518252602082019150602081019050602083039250610bf4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050509050919050565b6000610cf8836113d6565b50905080610f4c57816004846040518082805190602001908083835b60208310610d375780518252602082019150602081019050602083039250610d14565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000019080519060200190610d80929190611576565b5060006004846040518082805190602001908083835b60208310610db95780518252602082019150602081019050602083039250610d96565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548160ff021916908315150217905550600583908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610e41929190611576565b507ff49f5d228081cdcb24c2f4939e0f2236ab3121fd710df20a22d9e2130244b61d8383604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ea9578082015181840152602081019050610e8e565b50505050905090810190601f168015610ed65780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f0f578082015181840152602081019050610ef4565b50505050905090810190601f168015610f3c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15b505050565b806004836040518082805190602001908083835b60208310610f885780518252602082019150602081019050602083039250610f65565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000019080519060200190610fd1929190611576565b507fe4bc8abccea03a84d1974cb45f8445c3bed2c0d18e9e38396166ff6f8a95875b6004836040518082805190602001908083835b602083106110295780518252602082019150602081019050602083039250611006565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156110e85780601f106110bd576101008083540402835291602001916110e8565b820191906000526020600020905b8154815290600101906020018083116110cb57829003601f168201915b50509250505060405180910390a15050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111925780601f1061116757610100808354040283529160200191611192565b820191906000526020600020905b81548152906001019060200180831161117557829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080606060008060016002600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112865780601f1061125b57610100808354040283529160200191611286565b820191906000526020600020905b81548152906001019060200180831161126957829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113225780601f106112f757610100808354040283529160200191611322565b820191906000526020600020905b81548152906001019060200180831161130557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113be5780601f10611393576101008083540402835291602001916113be565b820191906000526020600020905b8154815290600101906020018083116113a157829003601f168201915b50505050509150809050935093509350935090919293565b60008060008090505b60058054905081101561149157600581815481106113f957fe5b90600052602060002001604051808280546001816001161561010002031660029004801561145e5780601f1061143c57610100808354040283529182019161145e565b820191906000526020600020905b81548152906001019060200180831161144a575b505091505060405180910390208480519060200120141561148657600181925092505061149d565b6001810190506113df565b50600080809050915091505b915091565b80600190805190602001906114b8929190611576565b507fe6a3d4ec4f69ac853579fb0336181042ec4d0a21b32de1a92b6dd6a2f904f5a0600160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156115655780601f1061153a57610100808354040283529160200191611565565b820191906000526020600020905b81548152906001019060200180831161154857829003601f168201915b50509250505060405180910390a150565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115b757805160ff19168380011785556115e5565b828001600101855582156115e5579182015b828111156115e45782518255916020019190600101906115c9565b5b5090506115f291906115f6565b5090565b61161891905b808211156116145760008160009055506001016115fc565b5090565b9056fea26469706673582212208f95b891beb723e265264f26dc004e26ba7a45fedb8eefd94cea86d566ac266664736f6c63430006020033608060405234801561001057600080fd5b50611bb8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063209df0fa11610071578063209df0fa146105535780635b999a3814610581578063a023cf691461059f578063ed9aab51146105bd578063f09a401614610607578063fb3e64441461066b576100a9565b8063149adf58146100ae578063164f25bf146101e25780631692f21f146103345780631d6d32ba146104865780631d8e2f5814610509575b600080fd5b610167600480360360208110156100c457600080fd5b81019080803590602001906401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610726565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610332600480360360408110156101f857600080fd5b810190808035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ac57600080fd5b8201836020820111156102be57600080fd5b803590602001918460018302840111640100000000831117156102e057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108ff565b005b6104846004803603604081101561034a57600080fd5b810190808035906020019064010000000081111561036757600080fd5b82018360208201111561037957600080fd5b8035906020019184600183028401116401000000008311171561039b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fe57600080fd5b82018360208201111561041057600080fd5b8035906020019184600183028401116401000000008311171561043257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e74565b005b61048e6112b4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ce5780820151818401526020810190506104b3565b50505050905090810190601f1680156104fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051161141b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050611441565b005b6105896115d5565b6040518082815260200191505060405180910390f35b6105a761167f565b6040518082815260200191505060405180910390f35b6105c5611685565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116ab565b005b6107246004803603602081101561068157600080fd5b810190808035906020019064010000000081111561069e57600080fd5b8201836020820111156106b057600080fd5b803590602001918460018302840111640100000000831117156106d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061188d565b005b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107b557808201518184015260208101905061079a565b50505050905090810190601f1680156107e25780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561083d57600080fd5b810190808051604051939291908464010000000082111561085d57600080fd5b8382019150602082018581111561087357600080fd5b825186600182028301116401000000008211171561089057600080fd5b8083526020830192505050908051906020019080838360005b838110156108c45780820151818401526020810190506108a9565b50505050905090810190601f1680156108f15780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663164f25bf83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610991578082015181840152602081019050610976565b50505050905090810190601f1680156109be5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156109f75780820151818401526020810190506109dc565b50505050905090810190601f168015610a245780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c822d7f0846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aec578082015181840152602081019050610ad1565b50505050905090810190601f168015610b195780820380516001836020036101000a031916815260200191505b5092505050604080518083038186803b158015610b3557600080fd5b505afa158015610b49573d6000803e3d6000fd5b505050506040513d6040811015610b5f57600080fd5b8101908080519060200190929190805190602001909291905050505090506001151581151514610b8b57fe5b606083905060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58866040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1f578082015181840152602081019050610c04565b50505050905090810190601f168015610c4c5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015610c6957600080fd5b505afa158015610c7d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ca757600080fd5b8101908080516040519392919084640100000000821115610cc757600080fd5b83820191506020820185811115610cdd57600080fd5b8251866001820283011164010000000082111715610cfa57600080fd5b8083526020830192505050908051906020019080838360005b83811015610d2e578082015181840152602081019050610d13565b50505050905090810190601f168015610d5b5780820380516001836020036101000a031916815260200191505b5060405250505090507f3fdde72950e6d9c53073a94114bea65c19a2076d1d4ff9390a70519dcbff22dd8282604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610dcb578082015181840152602081019050610db0565b50505050905090810190601f168015610df85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610e31578082015181840152602081019050610e16565b50505050905090810190601f168015610e5e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631692f21f83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f06578082015181840152602081019050610eeb565b50505050905090810190601f168015610f335780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f6c578082015181840152602081019050610f51565b50505050905090810190601f168015610f995780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b5050505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611061578082015181840152602081019050611046565b50505050905090810190601f16801561108e5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110e957600080fd5b810190808051604051939291908464010000000082111561110957600080fd5b8382019150602082018581111561111f57600080fd5b825186600182028301116401000000008211171561113c57600080fd5b8083526020830192505050908051906020019080838360005b83811015611170578082015181840152602081019050611155565b50505050905090810190601f16801561119d5780820380516001836020036101000a031916815260200191505b5060405250505090507fa3560ee2efe796786b53781edf5691ed5900487a522725140e017119fc1ffe138382604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561120d5780820151818401526020810190506111f2565b50505050905090810190601f16801561123a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611273578082015181840152602081019050611258565b50505050905090810190601f1680156112a05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d6d32ba6040518163ffffffff1660e01b815260040160006040518083038186803b15801561131d57600080fd5b505afa158015611331573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561135b57600080fd5b810190808051604051939291908464010000000082111561137b57600080fd5b8382019150602082018581111561139157600080fd5b82518660018202830111640100000000821117156113ae57600080fd5b8083526020830192505050908051906020019080838360005b838110156113e25780820151818401526020810190506113c7565b50505050905090810190601f16801561140f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663209df0fa826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050506040513d60208110156114e057600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a023cf696040518163ffffffff1660e01b815260040160206040518083038186803b15801561155a57600080fd5b505afa15801561156e573d6000803e3d6000fd5b505050506040513d602081101561158457600080fd5b81019080805190602001909291905050506004819055507f5443a9b3a4f844af7ea1bbffa88c16f6f6c35f174ae032da718b6285c6be869c816040518082815260200191505060405180910390a150565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a023cf696040518163ffffffff1660e01b815260040160206040518083038186803b15801561163f57600080fd5b505afa158015611653573d6000803e3d6000fd5b505050506040513d602081101561166957600080fd5b8101908080519060200190929190505050905090565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f81bc37599d8daaee75b12342129cc1b062c2f8aa7e7ac6958fba02c558b859898282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb3e6444826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561191a5780820151818401526020810190506118ff565b50505050905090810190601f1680156119475780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561196657600080fd5b505af115801561197a573d6000803e3d6000fd5b5050505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d6d32ba6040518163ffffffff1660e01b815260040160006040518083038186803b1580156119e757600080fd5b505afa1580156119fb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611a2557600080fd5b8101908080516040519392919084640100000000821115611a4557600080fd5b83820191506020820185811115611a5b57600080fd5b8251866001820283011164010000000082111715611a7857600080fd5b8083526020830192505050908051906020019080838360005b83811015611aac578082015181840152602081019050611a91565b50505050905090810190601f168015611ad95780820380516001836020036101000a031916815260200191505b5060405250505090507f38f34884b67bf9d0741f654919f99f08b4b7f9809bef14be841cea0c25586dd5816040518080602001828103825283818151815260200191508051906020019080838360005b83811015611b44578082015181840152602081019050611b29565b50505050905090810190601f168015611b715780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505056fea2646970667358221220875010543ed6bc64ac1b91b039cc6ac16d3697f9bac0109879b592d24c5e15de64736f6c63430006020033a264697066735822122089754367072b71f3b355c8ec729964225016df4f07cc2ebfd6a18f4236f2d97664736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063132a77ee1461005c57806337c3a7da146101575780639433fcbc14610175578063d31097da146101e3578063ef08989d146103f6575b600080fd5b6101156004803603602081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061052a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015f6105c0565b6040518082815260200191505060405180910390f35b6101a16004803603602081101561018b57600080fd5b81019080803590602001909291905050506105cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f4600480360360a08110156101f957600080fd5b810190808035906020019064010000000081111561021657600080fd5b82018360208201111561022857600080fd5b8035906020019184600183028401116401000000008311171561024a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ad57600080fd5b8201836020820111156102bf57600080fd5b803590602001918460018302840111640100000000831117156102e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034457600080fd5b82018360208201111561035657600080fd5b8035906020019184600183028401116401000000008311171561037857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610609565b005b6104af6004803603602081101561040c57600080fd5b810190808035906020019064010000000081111561042957600080fd5b82018360208201111561043b57600080fd5b8035906020019184600183028401116401000000008311171561045d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ef5780820151818401526020810190506104d4565b50505050905090810190601f16801561051c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60006002826040518082805190602001908083835b60208310610562578051825260208201915060208101905060208303925061053f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600380549050905090565b600381815481106105da57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051610615906111b1565b604051809103906000f080158015610631573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662b5ec6b868686856040518563ffffffff1660e01b8152600401808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b8381101561073c578082015181840152602081019050610721565b50505050905090810190601f1680156107695780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156107a2578082015181840152602081019050610787565b50505050905090810190601f1680156107cf5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156108085780820151818401526020810190506107ed565b50505050905090810190601f1680156108355780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250604081101561089757600080fd5b81019080805160405193929190846401000000008211156108b757600080fd5b838201915060208201858111156108cd57600080fd5b82518660018202830111640100000000821117156108ea57600080fd5b8083526020830192505050908051906020019080838360005b8381101561091e578082015181840152602081019050610903565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561096e57600080fd5b8382019150602082018581111561098457600080fd5b82518660018202830111640100000000821117156109a157600080fd5b8083526020830192505050908051906020019080838360005b838110156109d55780820151818401526020810190506109ba565b50505050905090810190601f168015610a025780820380516001836020036101000a031916815260200191505b506040525050505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663209df0fa836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610abf57600080fd5b505af1158015610ad3573d6000803e3d6000fd5b505050506040513d6020811015610ae957600080fd5b8101908080519060200190929190505050506000604051610b09906111be565b604051809103906000f080158015610b25573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663f09a4016600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050806002876040518082805190602001908083835b60208310610c6d5780518252602082019150602081019050602083039250610c4a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856002876040518082805190602001908083835b60208310610d185780518252602082019150602081019050602083039250610cf5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190610d619291906111cb565b50836002876040518082805190602001908083835b60208310610d995780518252602082019150602081019050602083039250610d76565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002019080519060200190610de29291906111cb565b5060036002876040518082805190602001908083835b60208310610e1b5780518252602082019150602081019050602083039250610df8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1db9576dbbdd63cc0e73a6a1055164d40d9ffcec8ec56a8c352e94fb5a66e10c6002876040518082805190602001908083835b60208310610f295780518252602082019150602081019050602083039250610f06565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168786604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ff8578082015181840152602081019050610fdd565b50505050905090810190601f1680156110255780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561105e578082015181840152602081019050611043565b50505050905090810190601f16801561108b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050505050565b60606002826040518082805190602001908083835b602083106110db57805182526020820191506020810190506020830392506110b8565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a55780601f1061117a576101008083540402835291602001916111a5565b820191906000526020600020905b81548152906001019060200180831161118857829003601f168201915b50505050509050919050565b6116718061127183390190565b611bd8806128e283390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061120c57805160ff191683800117855561123a565b8280016001018555821561123a579182015b8281111561123957825182559160200191906001019061121e565b5b509050611247919061124b565b5090565b61126d91905b80821115611269576000816000905550600101611251565b5090565b9056fe608060405234801561001057600080fd5b50611651806100206000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80631d6d32ba116100665780631d6d32ba1461075d5780631d8e2f58146107e05780635ab1bd531461082a578063c822d7f0146109b8578063fb3e644414610a9257610092565b8062b5ec6b14610097578063149adf5814610385578063164f25bf146104b95780631692f21f1461060b575b600080fd5b61029e600480360360808110156100ad57600080fd5b81019080803590602001906401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460018302840111640100000000831117156100fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184600183028401116401000000008311171561019557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f857600080fd5b82018360208201111561020a57600080fd5b8035906020019184600183028401116401000000008311171561022c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b4d565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61043e6004803603602081101561039b57600080fd5b81019080803590602001906401000000008111156103b857600080fd5b8201836020820111156103ca57600080fd5b803590602001918460018302840111640100000000831117156103ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047e578082015181840152602081019050610463565b50505050905090810190601f1680156104ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610609600480360360408110156104cf57600080fd5b81019080803590602001906401000000008111156104ec57600080fd5b8201836020820111156104fe57600080fd5b8035906020019184600183028401116401000000008311171561052057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058357600080fd5b82018360208201111561059557600080fd5b803590602001918460018302840111640100000000831117156105b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ced565b005b61075b6004803603604081101561062157600080fd5b810190808035906020019064010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106d557600080fd5b8201836020820111156106e757600080fd5b8035906020019184600183028401116401000000008311171561070957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f51565b005b6107656110fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107a557808201518184015260208101905061078a565b50505050905090810190601f1680156107d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e861119c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108326111c2565b604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b838110156108ac578082015181840152602081019050610891565b50505050905090810190601f1680156108d95780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156109125780820151818401526020810190506108f7565b50505050905090810190601f16801561093f5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561097857808201518184015260208101905061095d565b50505050905090810190601f1680156109a55780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610a71600480360360208110156109ce57600080fd5b81019080803590602001906401000000008111156109eb57600080fd5b8201836020820111156109fd57600080fd5b80359060200191846001830284011164010000000083111715610a1f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113d6565b60405180831515151581526020018281526020019250505060405180910390f35b610b4b60048036036020811015610aa857600080fd5b8101908080359060200190640100000000811115610ac557600080fd5b820183602082011115610ad757600080fd5b80359060200191846001830284011164010000000083111715610af957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114a2565b005b6060808560009080519060200190610b66929190611576565b508460019080519060200190610b7d929190611576565b508360029080519060200190610b94929190611576565b5082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555094509492505050565b60606004826040518082805190602001908083835b60208310610c175780518252602082019150602081019050602083039250610bf4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050509050919050565b6000610cf8836113d6565b50905080610f4c57816004846040518082805190602001908083835b60208310610d375780518252602082019150602081019050602083039250610d14565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000019080519060200190610d80929190611576565b5060006004846040518082805190602001908083835b60208310610db95780518252602082019150602081019050602083039250610d96565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548160ff021916908315150217905550600583908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610e41929190611576565b507ff49f5d228081cdcb24c2f4939e0f2236ab3121fd710df20a22d9e2130244b61d8383604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ea9578082015181840152602081019050610e8e565b50505050905090810190601f168015610ed65780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f0f578082015181840152602081019050610ef4565b50505050905090810190601f168015610f3c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15b505050565b806004836040518082805190602001908083835b60208310610f885780518252602082019150602081019050602083039250610f65565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000019080519060200190610fd1929190611576565b507fe4bc8abccea03a84d1974cb45f8445c3bed2c0d18e9e38396166ff6f8a95875b6004836040518082805190602001908083835b602083106110295780518252602082019150602081019050602083039250611006565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156110e85780601f106110bd576101008083540402835291602001916110e8565b820191906000526020600020905b8154815290600101906020018083116110cb57829003601f168201915b50509250505060405180910390a15050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111925780601f1061116757610100808354040283529160200191611192565b820191906000526020600020905b81548152906001019060200180831161117557829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080606060008060016002600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112865780601f1061125b57610100808354040283529160200191611286565b820191906000526020600020905b81548152906001019060200180831161126957829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113225780601f106112f757610100808354040283529160200191611322565b820191906000526020600020905b81548152906001019060200180831161130557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113be5780601f10611393576101008083540402835291602001916113be565b820191906000526020600020905b8154815290600101906020018083116113a157829003601f168201915b50505050509150809050935093509350935090919293565b60008060008090505b60058054905081101561149157600581815481106113f957fe5b90600052602060002001604051808280546001816001161561010002031660029004801561145e5780601f1061143c57610100808354040283529182019161145e565b820191906000526020600020905b81548152906001019060200180831161144a575b505091505060405180910390208480519060200120141561148657600181925092505061149d565b6001810190506113df565b50600080809050915091505b915091565b80600190805190602001906114b8929190611576565b507fe6a3d4ec4f69ac853579fb0336181042ec4d0a21b32de1a92b6dd6a2f904f5a0600160405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156115655780601f1061153a57610100808354040283529160200191611565565b820191906000526020600020905b81548152906001019060200180831161154857829003601f168201915b50509250505060405180910390a150565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115b757805160ff19168380011785556115e5565b828001600101855582156115e5579182015b828111156115e45782518255916020019190600101906115c9565b5b5090506115f291906115f6565b5090565b61161891905b808211156116145760008160009055506001016115fc565b5090565b9056fea26469706673582212208f95b891beb723e265264f26dc004e26ba7a45fedb8eefd94cea86d566ac266664736f6c63430006020033608060405234801561001057600080fd5b50611bb8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063209df0fa11610071578063209df0fa146105535780635b999a3814610581578063a023cf691461059f578063ed9aab51146105bd578063f09a401614610607578063fb3e64441461066b576100a9565b8063149adf58146100ae578063164f25bf146101e25780631692f21f146103345780631d6d32ba146104865780631d8e2f5814610509575b600080fd5b610167600480360360208110156100c457600080fd5b81019080803590602001906401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610726565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610332600480360360408110156101f857600080fd5b810190808035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ac57600080fd5b8201836020820111156102be57600080fd5b803590602001918460018302840111640100000000831117156102e057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108ff565b005b6104846004803603604081101561034a57600080fd5b810190808035906020019064010000000081111561036757600080fd5b82018360208201111561037957600080fd5b8035906020019184600183028401116401000000008311171561039b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fe57600080fd5b82018360208201111561041057600080fd5b8035906020019184600183028401116401000000008311171561043257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e74565b005b61048e6112b4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ce5780820151818401526020810190506104b3565b50505050905090810190601f1680156104fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051161141b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050611441565b005b6105896115d5565b6040518082815260200191505060405180910390f35b6105a761167f565b6040518082815260200191505060405180910390f35b6105c5611685565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116ab565b005b6107246004803603602081101561068157600080fd5b810190808035906020019064010000000081111561069e57600080fd5b8201836020820111156106b057600080fd5b803590602001918460018302840111640100000000831117156106d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061188d565b005b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107b557808201518184015260208101905061079a565b50505050905090810190601f1680156107e25780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561083d57600080fd5b810190808051604051939291908464010000000082111561085d57600080fd5b8382019150602082018581111561087357600080fd5b825186600182028301116401000000008211171561089057600080fd5b8083526020830192505050908051906020019080838360005b838110156108c45780820151818401526020810190506108a9565b50505050905090810190601f1680156108f15780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663164f25bf83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610991578082015181840152602081019050610976565b50505050905090810190601f1680156109be5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156109f75780820151818401526020810190506109dc565b50505050905090810190601f168015610a245780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c822d7f0846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aec578082015181840152602081019050610ad1565b50505050905090810190601f168015610b195780820380516001836020036101000a031916815260200191505b5092505050604080518083038186803b158015610b3557600080fd5b505afa158015610b49573d6000803e3d6000fd5b505050506040513d6040811015610b5f57600080fd5b8101908080519060200190929190805190602001909291905050505090506001151581151514610b8b57fe5b606083905060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58866040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1f578082015181840152602081019050610c04565b50505050905090810190601f168015610c4c5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015610c6957600080fd5b505afa158015610c7d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ca757600080fd5b8101908080516040519392919084640100000000821115610cc757600080fd5b83820191506020820185811115610cdd57600080fd5b8251866001820283011164010000000082111715610cfa57600080fd5b8083526020830192505050908051906020019080838360005b83811015610d2e578082015181840152602081019050610d13565b50505050905090810190601f168015610d5b5780820380516001836020036101000a031916815260200191505b5060405250505090507f3fdde72950e6d9c53073a94114bea65c19a2076d1d4ff9390a70519dcbff22dd8282604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610dcb578082015181840152602081019050610db0565b50505050905090810190601f168015610df85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610e31578082015181840152602081019050610e16565b50505050905090810190601f168015610e5e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631692f21f83836040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f06578082015181840152602081019050610eeb565b50505050905090810190601f168015610f335780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f6c578082015181840152602081019050610f51565b50505050905090810190601f168015610f995780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b5050505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149adf58846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611061578082015181840152602081019050611046565b50505050905090810190601f16801561108e5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110e957600080fd5b810190808051604051939291908464010000000082111561110957600080fd5b8382019150602082018581111561111f57600080fd5b825186600182028301116401000000008211171561113c57600080fd5b8083526020830192505050908051906020019080838360005b83811015611170578082015181840152602081019050611155565b50505050905090810190601f16801561119d5780820380516001836020036101000a031916815260200191505b5060405250505090507fa3560ee2efe796786b53781edf5691ed5900487a522725140e017119fc1ffe138382604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561120d5780820151818401526020810190506111f2565b50505050905090810190601f16801561123a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611273578082015181840152602081019050611258565b50505050905090810190601f1680156112a05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d6d32ba6040518163ffffffff1660e01b815260040160006040518083038186803b15801561131d57600080fd5b505afa158015611331573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561135b57600080fd5b810190808051604051939291908464010000000082111561137b57600080fd5b8382019150602082018581111561139157600080fd5b82518660018202830111640100000000821117156113ae57600080fd5b8083526020830192505050908051906020019080838360005b838110156113e25780820151818401526020810190506113c7565b50505050905090810190601f16801561140f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663209df0fa826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050506040513d60208110156114e057600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a023cf696040518163ffffffff1660e01b815260040160206040518083038186803b15801561155a57600080fd5b505afa15801561156e573d6000803e3d6000fd5b505050506040513d602081101561158457600080fd5b81019080805190602001909291905050506004819055507f5443a9b3a4f844af7ea1bbffa88c16f6f6c35f174ae032da718b6285c6be869c816040518082815260200191505060405180910390a150565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a023cf696040518163ffffffff1660e01b815260040160206040518083038186803b15801561163f57600080fd5b505afa158015611653573d6000803e3d6000fd5b505050506040513d602081101561166957600080fd5b8101908080519060200190929190505050905090565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f81bc37599d8daaee75b12342129cc1b062c2f8aa7e7ac6958fba02c558b859898282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb3e6444826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561191a5780820151818401526020810190506118ff565b50505050905090810190601f1680156119475780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561196657600080fd5b505af115801561197a573d6000803e3d6000fd5b5050505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d6d32ba6040518163ffffffff1660e01b815260040160006040518083038186803b1580156119e757600080fd5b505afa1580156119fb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611a2557600080fd5b8101908080516040519392919084640100000000821115611a4557600080fd5b83820191506020820185811115611a5b57600080fd5b8251866001820283011164010000000082111715611a7857600080fd5b8083526020830192505050908051906020019080838360005b83811015611aac578082015181840152602081019050611a91565b50505050905090810190601f168015611ad95780820380516001836020036101000a031916815260200191505b5060405250505090507f38f34884b67bf9d0741f654919f99f08b4b7f9809bef14be841cea0c25586dd5816040518080602001828103825283818151815260200191508051906020019080838360005b83811015611b44578082015181840152602081019050611b29565b50505050905090810190601f168015611b715780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505056fea2646970667358221220875010543ed6bc64ac1b91b039cc6ac16d3697f9bac0109879b592d24c5e15de64736f6c63430006020033a264697066735822122089754367072b71f3b355c8ec729964225016df4f07cc2ebfd6a18f4236f2d97664736f6c63430006020033",
  "sourceMap": "313:2981:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:2981:1;;;;;;;",
  "deployedSourceMap": "313:2981:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:2981:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2825:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2825:139:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2825:139:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2825:139:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2825:139:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2825:139:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2524:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;752:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;752:26:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1522:893;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1522:893:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1522:893:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1522:893:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1522:893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1522:893:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1522:893:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1522:893:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1522:893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1522:893:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1522:893:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1522:893:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1522:893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1522:893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3151:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3151:141:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3151:141:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3151:141:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3151:141:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3151:141:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3151:141:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2825:139;2900:7;2926:11;2938:7;2926:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2926:20:1;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2919:38;;2825:139;;;:::o;2524:100::-;2575:7;2601:9;:16;;;;2594:23;;2524:100;:::o;752:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1522:893::-;1753:14;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1753:14:1;1742:8;;:25;;;;;;;;;;;;;;;;;;1778:8;;;;;;;;;;;:13;;;1792:7;1801:4;1807:13;1822:14;1778:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1778:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1778:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1778:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1778:59:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1778:59:1;;;;;;39:16:-1;36:1;17:17;2:54;1778:59:1;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1778:59:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1778:59:1;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1778:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1778:59:1;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1778:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:14;1847:13;;:45;;;;;;;;;;;;;;;;;;1902:13;;;;;;;;;;;:27;;;1930:11;1902:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1902:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1902:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1902:40:1;;;;;;;;;;;;;;;;;1953:29;1985:24;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1985:24:1;1953:56;;2019:10;:15;;;2043:8;;;;;;;;;;;2070:13;;;;;;;;;;;2019:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2019:67:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2019:67:1;;;;2147:10;2105:11;2117:7;2105:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2105:20:1;;;;;;;;;;;;;;;;;;;;;:31;;;:53;;;;;;;;;;;;;;;;;;2198:7;2168:11;2180:7;2168:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2168:20:1;;;;;;;;;;;;;;;;;;;;;:27;;:37;;;;;;;;;;;;:::i;:::-;;2251:13;2215:11;2227:7;2215:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2215:20:1;;;;;;;;;;;;;;;;;;;;;:33;;:49;;;;;;;;;;;;:::i;:::-;;2275:9;2290:11;2302:7;2290:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2290:20:1;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2275:47;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2275:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:70;2352:11;2364:7;2352:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2352:20:1;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2385:7;2394:13;2338:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2338:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2338:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:893;;;;;;:::o;3151:141::-;3220:13;3252:11;3264:7;3252:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3252:20:1;;;;;;;;;;;;;;;;;;;;;:33;;3245:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:141;;;:::o;313:2981::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\n/**\n * @title Registrar\n * @dev Create and interact with Registries.\n*/\n\nimport '../Registry/Registry.sol';\nimport '../RegistryToken/RegistryToken.sol';\nimport '../RegistryController/RegistryController.sol';\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Registrar { \n    using SafeMath for uint256;\n\n    /// @notice Emitted when a new Registry is added to the Registrar.\n    event registryAdded(address _controller, string _domain, string _registryType);\n\n    struct RegistrarEntry {\n        address controller;\n        string domain;\n        string registryType;\n    }\n\n    RegistryToken registryToken;\n    Registry registry;\n\n    mapping (string => RegistrarEntry) registryMap;\n    address[] public registrar;\n\n    /**\n     * @notice Creates a new Registry and associated Entry in the Registrar.\n     * @param _domain The primary name used to represent a particular Registry. \n     * @param _ref The primary reference that a Registry links to. This can be any type of content and is typically used to reference an index or url.\n     * @param _registryType The Registry's Type. Registry Types are defined globally at the Registrar and used to categorize Registries.\n     * @param _stakePrice The amount of Infinity Token required to register a new Entry in the Registry. \n     * @param _registryToken The address of the Registry's Token. Registry Tokens are issued upon staking Infinity Token to transfer the ownership of a Registry Entry.\n     */\n\n    function createRegistry (\n        string memory _domain,\n        string memory _ref,\n        string memory _registryType,\n        uint256 _stakePrice,\n        address payable _registryToken)\n        public\n    {\n        registry = new Registry();\n\n        registry.init(_domain, _ref, _registryType, _registryToken);\n        registryToken = RegistryToken(_registryToken);\n        registryToken.setStakePrice(_stakePrice);\n\n        RegistryController controller = new RegistryController();\n        controller.init(address(registry), payable(address(registryToken)));\n        \n        registryMap[_domain].controller = address(controller);\n        registryMap[_domain].domain = _domain;\n        registryMap[_domain].registryType = _registryType;\n\n        registrar.push(registryMap[_domain].controller);\n\n        emit registryAdded(registryMap[_domain].controller, _domain, _registryType);\n    }\n\n    /**\n     * @notice Returns the the number of Registries in the Registrar as an interger. \n     */\n\n    function getRegistrarLength() public view returns (uint256) {\n        return registrar.length;\n    }\n\n    /**\n     * @notice Returns the address of a Registry Controller by providing its domain as a string.\n     * @param _domain The primary name used to represent a particular Registry. \n     */\n\n    function getRegistryController(string memory _domain) public view returns (address) {\n        return registryMap[_domain].controller;\n    }\n\n    /**\n     * @notice Returns the Type of a Registry by providing its domain as a string.\n     * @param _domain The primary name used to represent a particular Registry. \n     */\n\n    function getRegistryType(string memory _domain) public view returns (string memory) {\n        return registryMap[_domain].registryType;\n    }\n}  ",
  "sourcePath": "/Users/neo/Code/ZNS/contracts/Registrar/Registrar.sol",
  "ast": {
    "absolutePath": "/Users/neo/Code/ZNS/contracts/Registrar/Registrar.sol",
    "exportedSymbols": {
      "Registrar": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/Registry/Registry.sol",
        "file": "../Registry/Registry.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 450,
        "src": "98:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/RegistryToken/RegistryToken.sol",
        "file": "../RegistryToken/RegistryToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 1133,
        "src": "133:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/RegistryController/RegistryController.sol",
        "file": "../RegistryController/RegistryController.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 683,
        "src": "178:54:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 1446,
        "src": "233:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          449,
          682
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208
        ],
        "name": "Registrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 41,
            "libraryName": {
              "contractScope": null,
              "id": 39,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1445,
              "src": "345:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1445",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "339:27:1",
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a new Registry is added to the Registrar.",
            "id": 49,
            "name": "registryAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "463:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "484:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "_registryType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "500:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:59:1"
            },
            "src": "443:79:1"
          },
          {
            "canonicalName": "Registrar.RegistrarEntry",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 51,
                "name": "controller",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "560:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "560:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "name": "domain",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "588:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "name": "registryType",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "611:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RegistrarEntry",
            "nodeType": "StructDefinition",
            "scope": 208,
            "src": "528:109:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "registryToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "643:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RegistryToken_$1132",
              "typeString": "contract RegistryToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 57,
              "name": "RegistryToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1132,
              "src": "643:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RegistryToken_$1132",
                "typeString": "contract RegistryToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "676:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$449",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 59,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 449,
              "src": "676:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$449",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 64,
            "name": "registryMap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "700:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
              "typeString": "mapping(string => struct Registrar.RegistrarEntry)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 61,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "709:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "700:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                "typeString": "mapping(string => struct Registrar.RegistrarEntry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 62,
                "name": "RegistrarEntry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 56,
                "src": "719:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage_ptr",
                  "typeString": "struct Registrar.RegistrarEntry"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9433fcbc",
            "id": 67,
            "name": "registrar",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "752:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 66,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "752:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "1732:683:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1742:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$449",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1753:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Registry_$449_$",
                          "typeString": "function () returns (contract Registry)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 81,
                          "name": "Registry",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 449,
                          "src": "1757:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Registry_$449",
                            "typeString": "contract Registry"
                          }
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$449",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "1742:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$449",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1792:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_ref",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1801:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_registryType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1807:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_registryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1822:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1778:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$449",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 282,
                      "src": "1778:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_payable_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory,address payable) external returns (string memory,string memory)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "registryToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1847:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryToken_$1132",
                        "typeString": "contract RegistryToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "_registryToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1877:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 96,
                        "name": "RegistryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "1863:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RegistryToken_$1132_$",
                          "typeString": "type(contract RegistryToken)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1863:29:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryToken_$1132",
                        "typeString": "contract RegistryToken"
                      }
                    },
                    "src": "1847:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryToken_$1132",
                      "typeString": "contract RegistryToken"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "_stakePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1930:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "registryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1902:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryToken_$1132",
                          "typeString": "contract RegistryToken"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStakePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 982,
                      "src": "1902:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:40:1"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 171,
                      "src": "1953:29:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryController_$682",
                        "typeString": "contract RegistryController"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 107,
                        "name": "RegistryController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 682,
                        "src": "1953:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1985:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RegistryController_$682_$",
                        "typeString": "function () returns (contract RegistryController)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 109,
                        "name": "RegistryController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 682,
                        "src": "1989:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryController_$682",
                      "typeString": "contract RegistryController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1953:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2043:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$449",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$449",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2035:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2035:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2035:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 124,
                                "name": "registryToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "2070:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RegistryToken_$1132",
                                  "typeString": "contract RegistryToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RegistryToken_$1132",
                                  "typeString": "contract RegistryToken"
                                }
                              ],
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2062:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 122,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2062:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2062:22:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2054:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2054:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2054:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "2019:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 533,
                      "src": "2019:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address payable) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2105:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2117:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2105:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "controller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2105:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "2147:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RegistryController_$682",
                            "typeString": "contract RegistryController"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RegistryController_$682",
                            "typeString": "contract RegistryController"
                          }
                        ],
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2139:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2139:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2139:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2105:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2168:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2180:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2168:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "domain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2168:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "_domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2198:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2168:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2215:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2227:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2215:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "registryType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2215:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "_registryType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2251:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2215:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "registryMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "2290:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                              "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                            }
                          },
                          "id": 158,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2302:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2290:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                            "typeString": "struct Registrar.RegistrarEntry storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "2290:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "registrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "2275:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2275:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:47:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 163,
                            "name": "registryMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "2352:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                              "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 164,
                            "name": "_domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2364:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2352:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                            "typeString": "struct Registrar.RegistrarEntry storage ref"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "2352:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2385:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "_registryType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2394:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 162,
                      "name": "registryAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2338:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "EmitStatement",
                  "src": "2333:75:1"
                }
              ]
            },
            "documentation": "@notice Creates a new Registry and associated Entry in the Registrar.\n@param _domain The primary name used to represent a particular Registry. \n@param _ref The primary reference that a Registry links to. This can be any type of content and is typically used to reference an index or url.\n@param _registryType The Registry's Type. Registry Types are defined globally at the Registrar and used to categorize Registries.\n@param _stakePrice The amount of Infinity Token required to register a new Entry in the Registry. \n@param _registryToken The address of the Registry's Token. Registry Tokens are issued upon staking Infinity Token to transfer the ownership of a Registry Entry.",
            "functionSelector": "d31097da",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1556:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "_ref",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1587:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "name": "_registryType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1615:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "name": "_stakePrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1652:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "_registryToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1681:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1546:166:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:1"
            },
            "scope": 208,
            "src": "1522:893:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2584:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "registrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2601:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2601:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 176,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2594:23:1"
                }
              ]
            },
            "documentation": "@notice Returns the the number of Registries in the Registrar as an interger. ",
            "functionSelector": "37c3a7da",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistrarLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:2:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 181,
                  "src": "2575:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2574:9:1"
            },
            "scope": 208,
            "src": "2524:100:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "2909:55:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "registryMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "2926:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2938:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2926:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                        "typeString": "struct Registrar.RegistrarEntry storage ref"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "controller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51,
                    "src": "2926:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "2919:38:1"
                }
              ]
            },
            "documentation": "@notice Returns the address of a Registry Controller by providing its domain as a string.\n@param _domain The primary name used to represent a particular Registry. ",
            "functionSelector": "132a77ee",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "2856:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2855:23:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "2900:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2900:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2899:9:1"
            },
            "scope": 208,
            "src": "2825:139:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "3235:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "registryMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3252:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                        }
                      },
                      "id": 203,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3264:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3252:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                        "typeString": "struct Registrar.RegistrarEntry storage ref"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "registryType",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "3252:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "3245:40:1"
                }
              ]
            },
            "documentation": "@notice Returns the Type of a Registry by providing its domain as a string.\n@param _domain The primary name used to represent a particular Registry. ",
            "functionSelector": "ef08989d",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryType",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "3176:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:23:1"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "3220:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3219:15:1"
            },
            "scope": 208,
            "src": "3151:141:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "313:2981:1"
      }
    ],
    "src": "0:3296:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/neo/Code/ZNS/contracts/Registrar/Registrar.sol",
    "exportedSymbols": {
      "Registrar": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/Registry/Registry.sol",
        "file": "../Registry/Registry.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 450,
        "src": "98:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/RegistryToken/RegistryToken.sol",
        "file": "../RegistryToken/RegistryToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 1133,
        "src": "133:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/contracts/RegistryController/RegistryController.sol",
        "file": "../RegistryController/RegistryController.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 683,
        "src": "178:54:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/neo/Code/ZNS/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 1446,
        "src": "233:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          449,
          682
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208
        ],
        "name": "Registrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 41,
            "libraryName": {
              "contractScope": null,
              "id": 39,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1445,
              "src": "345:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1445",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "339:27:1",
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a new Registry is added to the Registrar.",
            "id": 49,
            "name": "registryAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "463:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "484:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "_registryType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "500:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:59:1"
            },
            "src": "443:79:1"
          },
          {
            "canonicalName": "Registrar.RegistrarEntry",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 51,
                "name": "controller",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "560:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "560:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "name": "domain",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "588:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "name": "registryType",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 56,
                "src": "611:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RegistrarEntry",
            "nodeType": "StructDefinition",
            "scope": 208,
            "src": "528:109:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "registryToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "643:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RegistryToken_$1132",
              "typeString": "contract RegistryToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 57,
              "name": "RegistryToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1132,
              "src": "643:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RegistryToken_$1132",
                "typeString": "contract RegistryToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "676:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$449",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 59,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 449,
              "src": "676:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$449",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 64,
            "name": "registryMap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "700:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
              "typeString": "mapping(string => struct Registrar.RegistrarEntry)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 61,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "709:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "700:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                "typeString": "mapping(string => struct Registrar.RegistrarEntry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 62,
                "name": "RegistrarEntry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 56,
                "src": "719:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage_ptr",
                  "typeString": "struct Registrar.RegistrarEntry"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9433fcbc",
            "id": 67,
            "name": "registrar",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 208,
            "src": "752:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 66,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "752:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "1732:683:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1742:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$449",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1753:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Registry_$449_$",
                          "typeString": "function () returns (contract Registry)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 81,
                          "name": "Registry",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 449,
                          "src": "1757:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Registry_$449",
                            "typeString": "contract Registry"
                          }
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$449",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "1742:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$449",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1792:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_ref",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1801:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_registryType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1807:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_registryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1822:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1778:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$449",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 282,
                      "src": "1778:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_payable_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory,address payable) external returns (string memory,string memory)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "registryToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1847:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryToken_$1132",
                        "typeString": "contract RegistryToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "_registryToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1877:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 96,
                        "name": "RegistryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "1863:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RegistryToken_$1132_$",
                          "typeString": "type(contract RegistryToken)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1863:29:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryToken_$1132",
                        "typeString": "contract RegistryToken"
                      }
                    },
                    "src": "1847:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryToken_$1132",
                      "typeString": "contract RegistryToken"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "_stakePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1930:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "registryToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1902:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryToken_$1132",
                          "typeString": "contract RegistryToken"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStakePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 982,
                      "src": "1902:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:40:1"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 171,
                      "src": "1953:29:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryController_$682",
                        "typeString": "contract RegistryController"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 107,
                        "name": "RegistryController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 682,
                        "src": "1953:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1985:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RegistryController_$682_$",
                        "typeString": "function () returns (contract RegistryController)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 109,
                        "name": "RegistryController",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 682,
                        "src": "1989:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryController_$682",
                      "typeString": "contract RegistryController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1953:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2043:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$449",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$449",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2035:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2035:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2035:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 124,
                                "name": "registryToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "2070:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RegistryToken_$1132",
                                  "typeString": "contract RegistryToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RegistryToken_$1132",
                                  "typeString": "contract RegistryToken"
                                }
                              ],
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2062:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 122,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2062:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2062:22:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2054:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2054:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2054:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "2019:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryController_$682",
                          "typeString": "contract RegistryController"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 533,
                      "src": "2019:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address payable) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2105:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2117:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2105:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "controller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "2105:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "2147:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RegistryController_$682",
                            "typeString": "contract RegistryController"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RegistryController_$682",
                            "typeString": "contract RegistryController"
                          }
                        ],
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2139:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2139:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2139:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2105:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2168:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2180:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2168:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "domain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2168:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "_domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2198:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2168:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "registryMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2215:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                            "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2227:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2215:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                          "typeString": "struct Registrar.RegistrarEntry storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "registryType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2215:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "_registryType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2251:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2215:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "registryMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "2290:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                              "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                            }
                          },
                          "id": 158,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2302:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2290:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                            "typeString": "struct Registrar.RegistrarEntry storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "2290:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "registrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "2275:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2275:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:47:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 163,
                            "name": "registryMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "2352:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                              "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 164,
                            "name": "_domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2364:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2352:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                            "typeString": "struct Registrar.RegistrarEntry storage ref"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "2352:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2385:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "_registryType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2394:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 162,
                      "name": "registryAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2338:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "EmitStatement",
                  "src": "2333:75:1"
                }
              ]
            },
            "documentation": "@notice Creates a new Registry and associated Entry in the Registrar.\n@param _domain The primary name used to represent a particular Registry. \n@param _ref The primary reference that a Registry links to. This can be any type of content and is typically used to reference an index or url.\n@param _registryType The Registry's Type. Registry Types are defined globally at the Registrar and used to categorize Registries.\n@param _stakePrice The amount of Infinity Token required to register a new Entry in the Registry. \n@param _registryToken The address of the Registry's Token. Registry Tokens are issued upon staking Infinity Token to transfer the ownership of a Registry Entry.",
            "functionSelector": "d31097da",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1556:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "_ref",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1587:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "name": "_registryType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1615:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "name": "_stakePrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1652:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "_registryToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1681:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1546:166:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:1"
            },
            "scope": 208,
            "src": "1522:893:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2584:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "registrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2601:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2601:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 176,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2594:23:1"
                }
              ]
            },
            "documentation": "@notice Returns the the number of Registries in the Registrar as an interger. ",
            "functionSelector": "37c3a7da",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistrarLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:2:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 181,
                  "src": "2575:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2574:9:1"
            },
            "scope": 208,
            "src": "2524:100:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "2909:55:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "registryMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "2926:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2938:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2926:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                        "typeString": "struct Registrar.RegistrarEntry storage ref"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "controller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51,
                    "src": "2926:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "2919:38:1"
                }
              ]
            },
            "documentation": "@notice Returns the address of a Registry Controller by providing its domain as a string.\n@param _domain The primary name used to represent a particular Registry. ",
            "functionSelector": "132a77ee",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "2856:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2855:23:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "2900:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2900:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2899:9:1"
            },
            "scope": 208,
            "src": "2825:139:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "3235:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "registryMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3252:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RegistrarEntry_$56_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.RegistrarEntry storage ref)"
                        }
                      },
                      "id": 203,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3264:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3252:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegistrarEntry_$56_storage",
                        "typeString": "struct Registrar.RegistrarEntry storage ref"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "registryType",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "3252:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "3245:40:1"
                }
              ]
            },
            "documentation": "@notice Returns the Type of a Registry by providing its domain as a string.\n@param _domain The primary name used to represent a particular Registry. ",
            "functionSelector": "ef08989d",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryType",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "_domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "3176:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:23:1"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "3220:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3219:15:1"
            },
            "scope": 208,
            "src": "3151:141:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "313:2981:1"
      }
    ],
    "src": "0:3296:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "1599693445785": {
      "events": {
        "0x1db9576dbbdd63cc0e73a6a1055164d40d9ffcec8ec56a8c352e94fb5a66e10c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "registry",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_domain",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "registryType",
              "type": "string"
            }
          ],
          "name": "registryAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBF3D15ebCb0bD7BeDe53B6B47F2d445415E09A7a",
      "transactionHash": "0xcfc67c5e23d0864fd4f1a7f56971fb5ced0e05c2ecf18100caa1bfa22b019532"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-09-13T07:05:31.345Z",
  "devdoc": {
    "methods": {
      "createRegistry(string,string,string,uint256,address)": {
        "params": {
          "_domain": "The primary name used to represent a particular Registry. ",
          "_ref": "The primary reference that a Registry links to. This can be any type of content and is typically used to reference an index or url.",
          "_registryToken": "The address of the Registry's Token. Registry Tokens are issued upon staking Infinity Token to transfer the ownership of a Registry Entry.",
          "_registryType": "The Registry's Type. Registry Types are defined globally at the Registrar and used to categorize Registries.",
          "_stakePrice": "The amount of Infinity Token required to register a new Entry in the Registry. "
        }
      },
      "getRegistryController(string)": {
        "params": {
          "_domain": "The primary name used to represent a particular Registry. "
        }
      },
      "getRegistryType(string)": {
        "params": {
          "_domain": "The primary name used to represent a particular Registry. "
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createRegistry(string,string,string,uint256,address)": {
        "notice": "Creates a new Registry and associated Entry in the Registrar."
      },
      "getRegistrarLength()": {
        "notice": "Returns the the number of Registries in the Registrar as an interger. "
      },
      "getRegistryController(string)": {
        "notice": "Returns the address of a Registry Controller by providing its domain as a string."
      },
      "getRegistryType(string)": {
        "notice": "Returns the Type of a Registry by providing its domain as a string."
      }
    }
  }
}